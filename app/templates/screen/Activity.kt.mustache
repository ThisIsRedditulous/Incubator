package {{package}}.ui.{{screenLowerCase}}

import android.content.Context
import android.content.Intent
import android.databinding.DataBindingUtil
import android.os.Bundle

import {{package}}.R
import {{package}}.app.MainApplication
import {{package}}.ui.BaseActivity
import {{package}}.ui.{{screenLowerCase}}.{{screenUpperCamel}}Component.{{screenUpperCamel}}Module
import {{package}}.ui.{{screenLowerCase}}.{{screenUpperCamel}}Fragment.{{screenUpperCamel}}FragmentHost
import {{package}}.ui.{{screenLowerCase}}.{{screenUpperCamel}}Presenter.{{screenUpperCamel}}ViewContract

import javax.inject.Inject

class {{screenUpperCamel}}Activity : BaseActivity(), {{screenUpperCamel}}ViewContract, {{screenUpperCamel}}FragmentHost {

    private lateinit var component: {{screenUpperCamel}}Component

    @Inject lateinit var presenter: {{screenUpperCamel}}Presenter

    private lateinit var binding: {{screenUpperCamel}}ActivityBinding

    public override fun onCreate(savedInstanceState: Bundle?) {
        component = appComponent.{{screenLowerCamel}}Component({{screenUpperCamel}}Module(this))
        component.inject(this)

        presenter.view = this
        lifecycle.addObserver(presenter)
        presenter.restoreState(savedInstanceState)

        super.onCreate(savedInstanceState)

        binding = DataBindingUtil.setContentView(this, R.layout.activity_{{screenUnderscore}})
        binding.presenter = presenter
        binding.executePendingBindings()

        setSupportActionBar(binding.toolbar)
        supportActionBar!!.title = "{{screenUpperCamel}}"
    }

    override fun onSaveInstanceState(outState: Bundle) {
        super.onSaveInstanceState(outState)
        presenter.saveState(outState)
    }

    override fun inject(fragment: {{screenUpperCamel}}Fragment) = component.inject(fragment)

    companion object {
        fun buildIntent(context: Context): Intent {
            return Intent(context, {{screenUpperCamel}}Activity::class.java)
        }
    }
}
